{"version":3,"sources":["components/wrapper/wrapper.js","components/scoreribbon/scoreribbon.js","components/jumbotron/jumbotron.js","components/mineralcard/mineralcard.js","components/footer/footer.js","App.js","index.js"],"names":["Wrapper","props","className","children","scoreRibbon","href","answerResult","currentScore","maxScore","Jumbotron","MineralCard","animate","onClick","selectCard","id","alt","name","src","image","Footer","App","state","minerals","selectedCards","shuffleCards","sort","Math","random","setState","indexOf","push","this","map","mineral","Component","ReactDOM","render","document","getElementById"],"mappings":"mpCAOeA,MAJf,SAAiBC,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,Y,MCmB1BC,MApBf,SAAqBH,GACnB,OACE,qBAAKC,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACA,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,QAAd,SACA,mBAAGG,KAAK,IAAR,6BAEA,oBAAIH,UAAU,sBAAd,SACGD,EAAMK,eAET,qBAAIJ,UAAU,sBAAd,oBACUD,EAAMM,aADhB,iBAC4CN,EAAMO,oB,MCL3CC,MAPf,WACE,OAAO,sBAAKP,UAAU,8CAAf,UACL,oBAAIA,UAAU,cAAd,kCACA,oBAAIA,UAAU,cAAd,4E,MCKWQ,MARf,SAAqBT,GACnB,OACE,qBAAKC,UAAS,iCAA4BD,EAAMU,SAAUC,QAAS,kBAAMX,EAAMY,WAAWZ,EAAMa,KAAhG,SACI,qBAAKC,IAAKd,EAAMe,KAAMC,IAAKhB,EAAMiB,W,MCM1BC,MATf,WACE,OACA,wBAAQjB,UAAU,SAAlB,SACE,qBAAKA,UAAU,SAAf,6B,OCwEWkB,E,4MApEbC,MAAQ,CACNC,SAAUA,EACVC,cAAe,GACfhB,aAAc,EACdC,SAAU,EACVF,aAAc,0BACdK,QAAS,I,EAOXa,aAAe,WACb,IAAMF,EAAW,EAAKD,MAAMC,SAASG,MAAK,kBAAMC,KAAKC,SAAW,MAChE,EAAKC,SAAS,CAAEN,SAAUA,K,EAG5BT,WAAa,SAACC,GAER,EAAKO,MAAME,cAAcM,QAAQf,IAAO,EAC1C,EAAKc,SAAS,CACZrB,aAAc,EACdgB,cAAe,GACfZ,QAAS,kBACTL,aAAc,cAGhB,EAAKsB,SAAS,CACZjB,QAAS,GACTJ,aAAc,EAAKc,MAAMd,aAAe,EACxCD,aAAc,YAEhB,EAAKe,MAAME,cAAcO,KAAKhB,GAC1B,EAAKO,MAAMd,cAAgB,EAAKc,MAAMb,UACxC,EAAKoB,SAAS,CAAEpB,SAAU,EAAKa,MAAMd,aAAe,KAGxD,EAAKiB,gB,uDA7BP,WACEO,KAAKP,iB,oBA+BP,WAAU,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CACElB,aAAcyB,KAAKV,MAAMf,aACzBC,aAAcwB,KAAKV,MAAMd,aACzBC,SAAUuB,KAAKV,MAAMb,WAEvB,cAAC,EAAD,IACA,cAAC,EAAD,UACGuB,KAAKV,MAAMC,SAASU,KAAI,SAAAC,GAAO,OAC9B,cAAC,EAAD,CACEpB,WAAY,EAAKA,WACjBC,GAAImB,EAAQnB,GAEZE,KAAMiB,EAAQjB,KACdE,MAAOe,EAAQf,MACfP,QAAS,EAAKU,MAAMV,SAHfsB,EAAQnB,SAOnB,cAAC,EAAD,W,GA/DUoB,aCLlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bc1f45a6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction scoreRibbon(props) {\n  return (\n    <nav className=\"navbar sticky-top\">\n      <div className=\"container-fluid\">\n      <ul className=\"navbar-nav\">\n        <li className=\"brand\">\n        <a href=\"/\">Mineral Mania</a>\n        </li>\n        <li className=\"nav-item nav-bar-li\">\n          {props.answerResult}\n        </li>\n        <li className=\"nav-item nav-bar-li\">\n          Score: {props.currentScore} | Top Score: {props.maxScore}\n        </li>     \n      </ul>\n      </div>   \n    </nav>\n  )\n}\n\nexport default scoreRibbon;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return <div className=\"jumbotron mb-0 mt-5 bg-secondary text-light\">\n    <h1 className=\"text-center\">Clicking Memory Game</h1>\n    <h3 className=\"text-center\">Click on a mineral, but don't click on any more than once!</h3>\n  </div>\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction MineralCard(props) {\n  return (\n    <div className={`card animate__animated ${props.animate}`}onClick={() => props.selectCard(props.id)}>      \n        <img alt={props.name} src={props.image} />      \n    </div>\n  );\n}\n\nexport default MineralCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n  <footer className=\"footer\">\n    <div className=\"bottom\">\n      Clicky Game! \n    </div>\n  </footer>\n  )}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Wrapper from \"./components/wrapper/wrapper\";\nimport Scoreribbon from \"./components/scoreribbon/scoreribbon\";\nimport Jumbotron from \"./components/jumbotron/jumbotron\";\nimport MineralCard from \"./components/mineralcard/mineralcard\";\nimport Footer from \"./components/footer/footer\";\n\nimport minerals from \"./minerals.json\";\n\nclass App extends Component {\n  state = {\n    minerals: minerals,\n    selectedCards: [],\n    currentScore: 0,\n    maxScore: 0,\n    answerResult: \"Click an image to begin\",\n    animate: ''\n  };\n\n  componentDidMount() {\n    this.shuffleCards();\n  }\n\n  shuffleCards = () => {\n    const minerals = this.state.minerals.sort(() => Math.random() - 0.5);\n    this.setState({ minerals: minerals });\n  }\n\n  selectCard = (id) => {\n    //Check for duplicate card selection -> end the game and reset\n    if (this.state.selectedCards.indexOf(id) > -1) {\n      this.setState({\n        currentScore: 0,\n        selectedCards: [],\n        animate: \"animate__shakeX\",\n        answerResult: \"You lost\"\n      });      \n    } else {\n      this.setState({\n        animate: \"\",\n        currentScore: this.state.currentScore + 1,\n        answerResult: \"Correct\"\n      });\n      this.state.selectedCards.push(id);\n      if (this.state.currentScore >= this.state.maxScore) {\n        this.setState({ maxScore: this.state.currentScore + 1 });\n      }\n    }\n    this.shuffleCards();\n  }\n\n  render() {\n    return (\n      <div>\n        <Scoreribbon\n          answerResult={this.state.answerResult}\n          currentScore={this.state.currentScore}\n          maxScore={this.state.maxScore}\n        />\n        <Jumbotron />\n        <Wrapper>\n          {this.state.minerals.map(mineral => (\n            <MineralCard\n              selectCard={this.selectCard}\n              id={mineral.id}\n              key={mineral.id}\n              name={mineral.name}\n              image={mineral.image}\n              animate={this.state.animate}\n            />\n          ))}\n        </Wrapper>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}